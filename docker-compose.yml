version: '3'

services:
  django: &django
    build:
      context: .
      dockerfile: ./compose/local/django/Dockerfile
    container_name: scoap3_local_django
    restart: always
    links:
        - db:db
    depends_on:
      - db
      - redis
      - mq
      - s3
    volumes:
      - .:/app:z
    env_file:
      - .envs/docker/.django
      - .envs/docker/.postgres
    ports:
      - '8000:8000'
    command: sh -c 'poetry run python manage.py migrate && poetry run python manage.py runserver 0.0.0.0:8000'
    networks:
      - djangonetwork

  db:
    image: postgres:14.1
    restart: always
    container_name: scoap3_local_db
    env_file:
      - .envs/docker/.postgres
    ports:
      - '5432:5432'
    networks:
      - djangonetwork

  redis:
    image: redis:6
    container_name: scoap3_local_redis
    restart: 'always'
    read_only: true
    ports:
      - '6379:6379'
    networks:
      - djangonetwork

  celeryworker:
    <<: *django
    image: scoap3_local_celeryworker
    container_name: scoap3_local_celeryworker
    command: celery -A config.celery_app worker -l INFO
    depends_on:
      - redis
      - db
      - mq
    ports: []
    networks:
      - djangonetwork

  celerybeat:
    <<: *django
    image: scoap3_local_celerybeat
    container_name: scoap3_local_celerybeat
    depends_on:
      - redis
      - db
      - mq
    ports: []
    command: celery -A config.celery_app beat -l INFO
    networks:
      - djangonetwork

  node:
    build:
      context: .
      dockerfile: ./compose/local/node/Dockerfile
    image: scoap3_local_node
    container_name: scoap3_local_node
    environment:
      DJANGO_HOST: django
    depends_on:
      - django
    volumes:
      - .:/app:z
      # http://jdlm.info/articles/2016/03/06/lessons-building-node-app-docker.html
      - /app/node_modules
    command: npm run dev
    ports:
      - '3000:3000'
    networks:
      - djangonetwork

  opensearch:
    container_name: scoap3_local_opensearch
    build:
      context: .
      dockerfile: ./compose/local/opensearch/Dockerfile
    restart: 'always'
    environment:
      - cluster.name=opensearch-cluster
      - node.name=opensearch-node1
      - cluster.routing.allocation.disk.threshold_enabled=false
      - discovery.seed_hosts=opensearch-node1
      - bootstrap.memory_lock=true
      - discovery.type=single-node
      - DISABLE_SECURITY_PLUGIN=true
      - 'OPENSEARCH_JAVA_OPTS=-Xms1024m -Xmx1024m'
    ulimits:
      memlock:
        soft: -1
        hard: -1
      nofile:
        soft: 65536
        hard: 65536
    mem_limit: 2g
    ports:
      - 9200:9200
      - 9300:9300
      - 9600:9600 # performance analysis
    networks:
      - djangonetwork

  mq:
    image: rabbitmq:3.9.11-management
    restart: 'always'
    container_name: scoap3_local_mq
    ports:
      - '5672:5672'
    networks:
      - djangonetwork

  s3:
    image: minio/minio
    ports:
      - 9000:9000
      - 9001:9001
    environment:
      - MINIO_ROOT_USER=scoap3
      - MINIO_ROOT_PASSWORD=Scoap1234
    command: server /data --console-address ":9001"
    networks:
      - djangonetwork

  create_buckets:
    image: minio/mc
    depends_on:
      - s3
    entrypoint: >
      /bin/sh -c " sleep 10; /usr/bin/mc alias set scoap3 http://s3:9000 scoap3 Scoap1234; /usr/bin/mc mb scoap3/scoap3-dev-backend; /usr/bin/mc anonymous set download scoap3/scoap3-dev-backend; exit 0; "
    networks:
      - djangonetwork

  mailhog:
    image: mailhog/mailhog:v1.0.0
    container_name: scoap3_local_mailhog
    ports:
      - '8025:8025'
      - '1025:1025'
    networks:
      - djangonetwork

networks:
    djangonetwork:
        driver: bridge
